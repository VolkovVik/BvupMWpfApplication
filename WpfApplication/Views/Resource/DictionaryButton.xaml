<!-- ReSharper disable once Xaml.RedundantNamespaceAlias -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfApplication"
                    xmlns:main="clr-namespace:WpfApplication.Models.Main"
                    xmlns:form="clr-namespace:WpfApplication.Models.Form">
    <!-- Шаблоны используемых кистей -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DictionaryBrush.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!-- Подсоединение интерфейса IValueConverter для использование в анимациях -->
    <form:DateFormatter x:Key="FormatConverter" />
    <!-- Стиль кнопок -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource BaseButtonTemplate}" />
        <!-- <EventSetter Event="MouseEnter" Handler="Button_MouseEnter" /> -->
        <!-- <EventSetter Event="MouseLeave" Handler="Button_MouseLeave" /> -->
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <!--Setter Property="FontSize" Value="12.4"/-->
                <Setter Property="FontWeight" Value="Heavy" />
            </Trigger>
            <Trigger Property="Control.IsMouseOver" Value="False">
                <!--Setter Property="FontSize" Value="12"/-->
                <Setter Property="FontWeight" Value="Normal" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Шаблон кнопок-->
    <ControlTemplate x:Key="BaseButtonTemplate" TargetType="Button">
        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
            <!-- Outer Border with rounded corners. -->
            <Border x:Name="outerRectangle" Margin="0" Padding="0"
                    Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1" CornerRadius="2"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <!-- Inner Border with rounded corners. -->
            <Border x:Name="innerRectangle" Margin="1" Padding="0"
                    Background="{TemplateBinding Background}" BorderBrush="Transparent"
                    BorderThickness="1" CornerRadius="2"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentPresenter x:Name="myContentPresenter"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
            </Border>
            <!-- Glass Rectangle -->
            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       StrokeThickness="2" RadiusX="2" RadiusY="2" Opacity="0"
                       Fill="{StaticResource MyGlassBrushResource}"
                       RenderTransformOrigin="0.5,0.5">
                <Rectangle.Stroke>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.0" Color="LightBlue" />
                            <GradientStop Offset="1.0" Color="Gray" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Rectangle.Stroke>
                <!-- These transforms have no effect as they 
                     are declared here. 
                     The reason the transforms are included is to be targets 
                     for animation (see later). -->
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <RotateTransform />
                    </TransformGroup>
                </Rectangle.RenderTransform>
                <!-- A BevelBitmapEffect is applied to give the button a "Beveled" look. -->
                <Rectangle.BitmapEffect>
                    <BevelBitmapEffect />
                </Rectangle.BitmapEffect>

            </Rectangle>
            <!-- Present Text of the button. -->
        </Grid>
        <ControlTemplate.Triggers>
            <!-- Set action triggers for the buttons and define 
            what the button does in response to those triggers. -->
            <!-- Set properties when mouse pointer is over the button. -->
            <Trigger Property="IsMouseOver" Value="True">
                <!-- Below are three property settings that occur when the condition is met (user mouses over button).  -->
                <!-- Change the color of the outer rectangle when user mouses over it. -->
                <Setter Property="Background" TargetName="innerRectangle" Value="{StaticResource BlueBackgroundBrush}" />
                <!-- Sets the glass opacity to 1, therefore, the glass "appears" when user mouses over it. -->
                <Setter Property="Rectangle.Opacity" TargetName="glassCube" Value="1" />
            </Trigger>
            <!-- Set properties when button has focus. -->
            <Trigger Property="IsFocused" Value="true">
                <!-- Below are three property settings that occur when the condition is met (user mouses over button).  -->
                <!-- Change the color of the outer rectangle when user mouses over it. -->
                <Setter Property="Background" TargetName="innerRectangle" Value="{StaticResource BlueBackgroundBrush}" />
                <Setter Property="Background" TargetName="outerRectangle" Value="DeepSkyBlue" />
            </Trigger>
            <!-- Animations that start when mouse enters button. -->
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard Name="mouseEnterBeginStoryboard">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="glassCube"
                                             Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)"
                                             From="0" To="0.166" Duration="0:0:2"
                                             FillBehavior="HoldEnd" AutoReverse="True" RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="glassCube"
                                             Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                             From="0.166" To="0.332"
                                             Duration="0:0:2" FillBehavior="HoldEnd" AutoReverse="True"
                                             RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="glassCube"
                                             Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                             From="0.332" To="0.498"
                                             Duration="0:0:2" FillBehavior="HoldEnd" AutoReverse="True"
                                             RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="glassCube"
                                             Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Offset)"
                                             From="0.498" To="0.664"
                                             Duration="0:0:2" FillBehavior="HoldEnd" AutoReverse="True"
                                             RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="glassCube"
                                             Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[4].(GradientStop.Offset)"
                                             From="0.664" To="0.830"
                                             Duration="0:0:2" FillBehavior="HoldEnd" AutoReverse="True"
                                             RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="glassCube"
                                             Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[5].(GradientStop.Offset)"
                                             From="0.830" To="1"
                                             Duration="0:0:2" FillBehavior="HoldEnd" AutoReverse="True"
                                             RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <!-- Animations that start when mouse leaves button. -->
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <!-- Stopping the storyboard sets all animated properties back to default. -->
                    <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                </EventTrigger.Actions>
            </EventTrigger>
            <!-- Animation fires when button is clicked, causing glass to spin.  -->
            <EventTrigger RoutedEvent="Button.Click">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--DoubleAnimation Storyboard.TargetName="glassCube" 
                                             Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)" 
                                             By="360" Duration="0:0:0.5" FillBehavior="Stop"></-->
                            <!-- This animation makes the glass rectangle shrink in the X direction. -->
                            <!--DoubleAnimation Storyboard.TargetName="glassCube"
                                             Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                             By="-1" Duration="0:0:0.1" FillBehavior="Stop"></-->
                            <!-- This animation makes the glass rectangle shrin k in the Y direction. -->
                            <!--DoubleAnimation Storyboard.TargetName="glassCube" 
                                             Storyboard.TargetProperty="(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                             By="-1" Duration="0:0:0.1" FillBehavior="Stop"></-->
                            <ColorAnimation Storyboard.TargetName="glassCube"
                                            Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            From="Transparent" To="DeepSkyBlue" Duration="0:0:0.1" FillBehavior="Stop" />
                            <ColorAnimation Storyboard.TargetName="glassCube"
                                            Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                            From="Transparent" To="DeepSkyBlue" Duration="0:0:0.1" FillBehavior="Stop" />
                            <ColorAnimation Storyboard.TargetName="glassCube"
                                            Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[5].(GradientStop.Color)"
                                            From="Transparent" To="DeepSkyBlue" Duration="0:0:0.1" FillBehavior="Stop" />
                            <ColorAnimation Storyboard.TargetName="outerRectangle"
                                            Storyboard.TargetProperty="Background.Color"
                                            From="Transparent" To="DeepSkyBlue" Duration="0:0:0.1" FillBehavior="Stop" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>